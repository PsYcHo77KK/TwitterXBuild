name: Build & Release
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1
  HAVE_TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID != '' }}
on:
  schedule:
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  build-apk-schedule:
    uses: ./.github/workflows/build-artifact.yml
    with:
      COMMIT_CHANGELOG: true
      DEBUG_ENABLED: false
    secrets:
      ENVS: ${{ secrets.ENVS }}

  upload-to-github:
    name: GitHub Upload
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: build-apk-schedule

    steps:
      - name: Download Already Built APKs
        uses: actions/download-artifact@v3
        with:
          name: Built-APKs
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(TZ='American/Chicago' date +"%Y.%m.%d-%H.%M.%S")" >> $GITHUB_OUTPUT
          curl https://github.com/nikhilbadyal/docker-py-revanced/blob/changelogs/changelog.md > changelog.md

      - name: Delete Older Releases
        uses: nikhilbadyal/ghaction-rm-releases@v0.0.2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_PATTERN: "Build*"

      - name: Upload Build Artifact
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "*-output.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: Build-${{ steps.get-date.outputs.date }}
          artifactErrorsFailBuild: true

      - name: Sleep for 10 seconds
        run: |
          sleep 10

  virustotal-scan:
    needs: [ upload-to-github ]
    uses: nikhilbadyal/ghactions/.github/workflows/virustotal-scan.yml@main
    with:
      FILES: |
        .apk$
      request_rate: 4
    secrets:
      VT_API_KEY: ${{ secrets.VT_API_KEY }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

